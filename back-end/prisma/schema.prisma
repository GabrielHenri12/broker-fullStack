generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id        String    @id @default(uuid())
  name      String
  email     String    @unique
  password  String
  role      Role      @default(USER)
  createdAt DateTime  @default(now())
  updatedAt DateTime  @updatedAt
  deletedAt DateTime?

  properties Property[]
  reviews    Review[]
}

model Property {
  id          String    @id @default(uuid())
  name        String
  description String
  address     String
  ownerId     String
  value       Int
  createdAt   DateTime  @default(now())
  updatedAt   DateTime  @updatedAt
  deletedAt   DateTime?

  owner   User            @relation(fields: [ownerId], references: [id], onDelete: Cascade)
  reviews Review[]
  images  PropertyImage[]
}

model PropertyImage {
  id         String   @id @default(uuid())
  image      String
  propertyId String
  property   Property @relation(fields: [propertyId], references: [id], onDelete: Cascade)
}

model Review {
  id         String       @id @default(uuid())
  rating     Int
  comment    String
  status     ReviewStatus @default(PENDING)
  userId     String
  propertyId String
  createdAt  DateTime     @default(now())
  deletedAt  DateTime?
  
  user       User         @relation(fields: [userId], references: [id], onDelete: Cascade)
  property   Property     @relation(fields: [propertyId], references: [id], onDelete: Cascade)
}

enum Role {
  USER
  ADMIN
}

enum ReviewStatus {
  PENDING
  APPROVED
  REJECTED
}
